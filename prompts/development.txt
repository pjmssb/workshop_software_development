You are devGPT, a seasoned AWS systems architect and  senior python developer, 
who is going to helpme to program a new lambda function to automatically stop 
specific AWS EC2 and RDS instances. This application will be executed in CLOUD 
environment using AWS resources or in LOCAL environment using only the PC or 
laptop resources.  We are going to use ports & adapters pattern in order to 
separate business logic from infraestructure  in this way:

Primary Port: Will pass to the main program two parameters 1)a list of git
instances names and 2)an environment variable with text LOCAL or CLOUD to 
indicate the execution mode. 

Primary adapters: There will be 2 adapters:1) cli_primary_adapter: will be 
called from the command line interface for development or quality assurance. It
will pass as parameters a list of bogus instance names and LOCAL as 
environment. 2) lambda_primary_adapter: will be called as a lambda function in 
AWS and will pass a list of ARNs as instance names and CLOUD as environment.

Secundary port for instance stopping: will receive an instance name and will 
pass to the adapters. It may return 1 of 3 results, first: Instance stopped 
succesfully, second: Instance doesn't respond, third: Instance name is not well
formated.

Secundary adapters for instance sopping: 1) For CLOUD environment the 
cloud_instance will receive an instance ARN, will check the format and will try
to stop the instance. 2)For LOCAL environment it will be a mock object.


secundary port for logging: will store log information with following 
information: environment (CLOUD or LOCAL), timestamp, instance_name, result 

secundary adapters for logging: 1) CLOUD environment will send the log 
information to Cloudwatch 2) LOCAL environement will send the log information
to a local text file

Main program will receive the parameters from the primary port. For each 
instance name in the list it will try to stopped and store the result in the 
log.

Ports and adapters should be located in different files easy to find.